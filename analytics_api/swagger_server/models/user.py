# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from analytics_api.swagger_server.models.base_model_ import Model
from analytics_api.swagger_server.models.user_slices import UserSlices  # noqa: F401,E501
from analytics_api.swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, user_email: str=None, slices: UserSlices=None):  # noqa: E501
        """User - a model defined in Swagger

        :param user_id: The user_id of this User.  # noqa: E501
        :type user_id: str
        :param user_email: The user_email of this User.  # noqa: E501
        :type user_email: str
        :param slices: The slices of this User.  # noqa: E501
        :type slices: UserSlices
        """
        self.swagger_types = {
            'user_id': str,
            'user_email': str,
            'slices': UserSlices
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'user_email': 'user_email',
            'slices': 'slices'
        }
        self._user_id = user_id
        self._user_email = user_email
        self._slices = slices

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this User.


        :return: The user_id of this User.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this User.


        :param user_id: The user_id of this User.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_email(self) -> str:
        """Gets the user_email of this User.


        :return: The user_email of this User.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email: str):
        """Sets the user_email of this User.


        :param user_email: The user_email of this User.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def slices(self) -> UserSlices:
        """Gets the slices of this User.


        :return: The slices of this User.
        :rtype: UserSlices
        """
        return self._slices

    @slices.setter
    def slices(self, slices: UserSlices):
        """Sets the slices of this User.


        :param slices: The slices of this User.
        :type slices: UserSlices
        """

        self._slices = slices
