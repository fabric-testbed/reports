# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from reports_api.swagger_server.models.base_model_ import Model
from reports_api.swagger_server import util


class Interface(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, interface_id: str=None, site: str=None, vlan: str=None, bdf: str=None, local_name: str=None, device_name: str=None, name: str=None):  # noqa: E501
        """Interface - a model defined in Swagger

        :param interface_id: The interface_id of this Interface.  # noqa: E501
        :type interface_id: str
        :param site: The site of this Interface.  # noqa: E501
        :type site: str
        :param vlan: The vlan of this Interface.  # noqa: E501
        :type vlan: str
        :param bdf: The bdf of this Interface.  # noqa: E501
        :type bdf: str
        :param local_name: The local_name of this Interface.  # noqa: E501
        :type local_name: str
        :param device_name: The device_name of this Interface.  # noqa: E501
        :type device_name: str
        :param name: The name of this Interface.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'interface_id': str,
            'site': str,
            'vlan': str,
            'bdf': str,
            'local_name': str,
            'device_name': str,
            'name': str
        }

        self.attribute_map = {
            'interface_id': 'interface_id',
            'site': 'site',
            'vlan': 'vlan',
            'bdf': 'bdf',
            'local_name': 'local_name',
            'device_name': 'device_name',
            'name': 'name'
        }
        self._interface_id = interface_id
        self._site = site
        self._vlan = vlan
        self._bdf = bdf
        self._local_name = local_name
        self._device_name = device_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Interface':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The interface of this Interface.  # noqa: E501
        :rtype: Interface
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interface_id(self) -> str:
        """Gets the interface_id of this Interface.


        :return: The interface_id of this Interface.
        :rtype: str
        """
        return self._interface_id

    @interface_id.setter
    def interface_id(self, interface_id: str):
        """Sets the interface_id of this Interface.


        :param interface_id: The interface_id of this Interface.
        :type interface_id: str
        """

        self._interface_id = interface_id

    @property
    def site(self) -> str:
        """Gets the site of this Interface.


        :return: The site of this Interface.
        :rtype: str
        """
        return self._site

    @site.setter
    def site(self, site: str):
        """Sets the site of this Interface.


        :param site: The site of this Interface.
        :type site: str
        """

        self._site = site

    @property
    def vlan(self) -> str:
        """Gets the vlan of this Interface.


        :return: The vlan of this Interface.
        :rtype: str
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan: str):
        """Sets the vlan of this Interface.


        :param vlan: The vlan of this Interface.
        :type vlan: str
        """

        self._vlan = vlan

    @property
    def bdf(self) -> str:
        """Gets the bdf of this Interface.


        :return: The bdf of this Interface.
        :rtype: str
        """
        return self._bdf

    @bdf.setter
    def bdf(self, bdf: str):
        """Sets the bdf of this Interface.


        :param bdf: The bdf of this Interface.
        :type bdf: str
        """

        self._bdf = bdf

    @property
    def local_name(self) -> str:
        """Gets the local_name of this Interface.


        :return: The local_name of this Interface.
        :rtype: str
        """
        return self._local_name

    @local_name.setter
    def local_name(self, local_name: str):
        """Sets the local_name of this Interface.


        :param local_name: The local_name of this Interface.
        :type local_name: str
        """

        self._local_name = local_name

    @property
    def device_name(self) -> str:
        """Gets the device_name of this Interface.


        :return: The device_name of this Interface.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name: str):
        """Sets the device_name of this Interface.


        :param device_name: The device_name of this Interface.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def name(self) -> str:
        """Gets the name of this Interface.


        :return: The name of this Interface.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Interface.


        :param name: The name of this Interface.
        :type name: str
        """

        self._name = name
