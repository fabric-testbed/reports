openapi: 3.0.0
info:
  title: Analytics API with PostgreSQL
  description: "API for managing users, projects, slices, slivers, and related entities."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/RENCI3/analytics/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080/reports
tags:
- name: users
  description: Users in FABRIC
- name: projects
  description: Projects in FABRIC
- name: slices
  description: Slices in FABRIC
- name: slivers
  description: Slivers in FABRIC slices
- name: sites
  description: Sites in FABRIC
- name: hosts
  description: Hosts in FABRIC
- name: default
  description: Default information
paths:
  /version:
    get:
      tags:
      - version
      summary: Version
      description: Version
      operationId: version_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      x-openapi-router-controller: swagger_server.controllers.version_controller
  /users:
    get:
      tags:
      - users
      summary: Get users
      description: Retrieve a list of users with optional filters.
      operationId: users_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: user_id
        in: query
        description: Filter by user uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: user_email
        in: query
        description: Filter by user email
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: project_id
        in: query
        description: Filter by list of project UUIDs to include
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_id
        in: query
        description: Filter by slice uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: sliver_id
        in: query
        description: Filter by sliver uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: sliver_type
        in: query
        description: "Filter by sliver type; allowed values VM, Switch, Facility,\
          \ L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext,\
          \ FABNetv6Ext"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - VM
            - Switch
            - Facility
            - L2STS
            - L2PTP
            - L2Bridge
            - FABNetv4
            - FABNetv6
            - PortMirror
            - L3VPN
            - FABNetv4Ext
            - FABNetv6Ext
      - name: sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: component_type
        in: query
        description: "Filter by component type, allowed values GPU, SmartNIC, SharedNIC,\
          \ FPGA, NVME, Storage"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - GPU
            - SmartNIC
            - SharedNIC
            - FPGA
            - NVME
            - Storage
      - name: component_model
        in: query
        description: Filter by component model
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: bdf
        in: query
        description: Filter by specified BDF (Bus:Device.Function) of interfaces/components
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: vlan
        in: query
        description: Filter by VLAN associated with their sliver interfaces.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ip_subnet
        in: query
        description: Filter by specified IP subnet
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: facility
        in: query
        description: Filter by facility
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: site
        in: query
        description: Filter by site
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        description: Filter by host
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_user_id
        in: query
        description: Exclude Users by IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_user_email
        in: query
        description: Exclude Users by emails
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_project_id
        in: query
        description: Filter by list of project UUIDs to exclude
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_site
        in: query
        description: Exclude sites
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_host
        in: query
        description: Exclude hosts
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: exclude_sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: project_type
        in: query
        description: "Filter by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: exclude_project_type
        in: query
        description: "Exclude by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: user_active
        in: query
        description: Filter by user active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{uuid}:
    get:
      tags:
      - users
      summary: Get specific user
      description: Returns a user identified by uuid.
      operationId: users_uuid_get
      parameters:
      - name: uuid
        in: path
        description: User identified by universally unique identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/memberships:
    get:
      tags:
      - users
      summary: Get users
      description: Retrieve a list of users with optional filters.
      operationId: users_memberships_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: user_id
        in: query
        description: Filter by user uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: user_email
        in: query
        description: Filter by user email
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_user_id
        in: query
        description: Exclude Users by IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_user_email
        in: query
        description: Exclude Users by emails
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: project_type
        in: query
        description: "Filter by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: exclude_project_type
        in: query
        description: "Exclude by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: project_active
        in: query
        description: Filter by project active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: project_expired
        in: query
        description: Filter by project expiration (true = expired)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: project_retired
        in: query
        description: Filter by project retirement (true = retired)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: user_active
        in: query
        description: Filter by user active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userMemberships'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /sites:
    get:
      tags:
      - sites
      summary: Get sites
      description: Retrieve a list of sites.
      operationId: sites_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.sites_controller
  /hosts:
    get:
      tags:
      - hosts
      summary: Get hosts
      description: Retrieve a list of hosts.
      operationId: hosts_get
      parameters:
      - name: site
        in: query
        description: Filter by site
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_site
        in: query
        description: Exclude sites
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sites'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.hosts_controller
  /slivers:
    get:
      tags:
      - slivers
      summary: Get slivers
      description: Retrieve a list of slivers with optional filters.
      operationId: slivers_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: user_id
        in: query
        description: Filter by user uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: user_email
        in: query
        description: Filter by user email
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: project_id
        in: query
        description: Filter by list of project UUIDs to include
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_id
        in: query
        description: Filter by slice uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: sliver_id
        in: query
        description: Filter by sliver uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: sliver_type
        in: query
        description: "Filter by sliver type; allowed values VM, Switch, Facility,\
          \ L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext,\
          \ FABNetv6Ext"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - VM
            - Switch
            - Facility
            - L2STS
            - L2PTP
            - L2Bridge
            - FABNetv4
            - FABNetv6
            - PortMirror
            - L3VPN
            - FABNetv4Ext
            - FABNetv6Ext
      - name: sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: component_type
        in: query
        description: "Filter by component type, allowed values GPU, SmartNIC, SharedNIC,\
          \ FPGA, NVME, Storage"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - GPU
            - SmartNIC
            - SharedNIC
            - FPGA
            - NVME
            - Storage
      - name: component_model
        in: query
        description: Filter by component model
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: bdf
        in: query
        description: Filter by specified BDF (Bus:Device.Function) of interfaces/components
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: vlan
        in: query
        description: Filter by VLAN associated with their sliver interfaces.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ip_subnet
        in: query
        description: Filter by specified IP subnet
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: facility
        in: query
        description: Filter by facility
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: site
        in: query
        description: Filter by site
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        description: Filter by host
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_user_id
        in: query
        description: Exclude Users by IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_user_email
        in: query
        description: Exclude Users by emails
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_project_id
        in: query
        description: Filter by list of project UUIDs to exclude
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_site
        in: query
        description: Exclude sites
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_host
        in: query
        description: Exclude hosts
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: exclude_sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slivers'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.slivers_controller
  /slivers/{slice_id}/{sliver_id}:
    post:
      tags:
      - slivers
      summary: Create/Update Sliver
      description: Create/Update Sliver.
      operationId: slivers_slice_id_sliver_id_post
      parameters:
      - name: slice_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: sliver_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      requestBody:
        $ref: '#/components/requestBodies/payload_sliver'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_200_ok_no_content'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.slivers_controller
  /projects:
    get:
      tags:
      - projects
      summary: Retrieve a list of projects
      description: Returns a paginated list of projects with their UUIDs.
      operationId: projects_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: user_id
        in: query
        description: Filter by user uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: user_email
        in: query
        description: Filter by user email
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: project_id
        in: query
        description: Filter by list of project UUIDs to include
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_id
        in: query
        description: Filter by slice uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: sliver_id
        in: query
        description: Filter by sliver uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: sliver_type
        in: query
        description: "Filter by sliver type; allowed values VM, Switch, Facility,\
          \ L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext,\
          \ FABNetv6Ext"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - VM
            - Switch
            - Facility
            - L2STS
            - L2PTP
            - L2Bridge
            - FABNetv4
            - FABNetv6
            - PortMirror
            - L3VPN
            - FABNetv4Ext
            - FABNetv6Ext
      - name: sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: component_type
        in: query
        description: "Filter by component type, allowed values GPU, SmartNIC, SharedNIC,\
          \ FPGA, NVME, Storage"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - GPU
            - SmartNIC
            - SharedNIC
            - FPGA
            - NVME
            - Storage
      - name: component_model
        in: query
        description: Filter by component model
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: bdf
        in: query
        description: Filter by specified BDF (Bus:Device.Function) of interfaces/components
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: vlan
        in: query
        description: Filter by VLAN associated with their sliver interfaces.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ip_subnet
        in: query
        description: Filter by specified IP subnet
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: facility
        in: query
        description: Filter by facility
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: site
        in: query
        description: Filter by site
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        description: Filter by host
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_user_id
        in: query
        description: Exclude Users by IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_user_email
        in: query
        description: Exclude Users by emails
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_project_id
        in: query
        description: Filter by list of project UUIDs to exclude
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_site
        in: query
        description: Exclude sites
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_host
        in: query
        description: Exclude hosts
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: exclude_sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: project_type
        in: query
        description: "Filter by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: exclude_project_type
        in: query
        description: "Exclude by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: project_active
        in: query
        description: Filter by project active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.projects_controller
  /projects/{uuid}:
    get:
      tags:
      - projects
      summary: Retrieve a project
      description: Returns a project identified by uuid.
      operationId: projects_uuid_get
      parameters:
      - name: uuid
        in: path
        description: Project identified by universally unique identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.projects_controller
  /projects/memberships:
    get:
      tags:
      - projects
      summary: Retrieve project membership records
      description: "Retrieve project memberships with filters on time range, project\
        \ UUIDs, project status, user activity, and membership attributes. Only the\
        \ highest-priority membership type is returned per user/project/timestamp."
      operationId: projects_memberships_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: project_id
        in: query
        description: Filter by list of project UUIDs to include
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_project_id
        in: query
        description: Filter by list of project UUIDs to exclude
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: project_type
        in: query
        description: "Filter by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: exclude_project_type
        in: query
        description: "Exclude by project type; allowed values research, education,\
          \ maintenance, tutorial"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - research
            - education
            - maintenance
            - tutorial
      - name: project_active
        in: query
        description: Filter by project active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: project_expired
        in: query
        description: Filter by project expiration (true = expired)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: project_retired
        in: query
        description: Filter by project retirement (true = retired)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: user_active
        in: query
        description: Filter by user active status
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectMemberships'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.projects_controller
  /slices:
    get:
      tags:
      - slices
      summary: Get slices
      description: Retrieve a list of slices with optional filters.
      operationId: slices_get
      parameters:
      - name: start_time
        in: query
        description: Filter by start time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: end_time
        in: query
        description: Filter by end time (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: user_id
        in: query
        description: Filter by user uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: user_email
        in: query
        description: Filter by user email
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: project_id
        in: query
        description: Filter by list of project UUIDs to include
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_id
        in: query
        description: Filter by slice uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: sliver_id
        in: query
        description: Filter by sliver uuid
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: sliver_type
        in: query
        description: "Filter by sliver type; allowed values VM, Switch, Facility,\
          \ L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext,\
          \ FABNetv6Ext"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - VM
            - Switch
            - Facility
            - L2STS
            - L2PTP
            - L2Bridge
            - FABNetv4
            - FABNetv6
            - PortMirror
            - L3VPN
            - FABNetv4Ext
            - FABNetv6Ext
      - name: sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: component_type
        in: query
        description: "Filter by component type, allowed values GPU, SmartNIC, SharedNIC,\
          \ FPGA, NVME, Storage"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - GPU
            - SmartNIC
            - SharedNIC
            - FPGA
            - NVME
            - Storage
      - name: component_model
        in: query
        description: Filter by component model
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: bdf
        in: query
        description: Filter by specified BDF (Bus:Device.Function) of interfaces/components
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: vlan
        in: query
        description: Filter by VLAN associated with their sliver interfaces.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ip_subnet
        in: query
        description: Filter by specified IP subnet
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: facility
        in: query
        description: Filter by facility
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: site
        in: query
        description: Filter by site
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        description: Filter by host
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_user_id
        in: query
        description: Exclude Users by IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_user_email
        in: query
        description: Exclude Users by emails
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_project_id
        in: query
        description: Filter by list of project UUIDs to exclude
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
            example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      - name: exclude_site
        in: query
        description: Exclude sites
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_host
        in: query
        description: Exclude hosts
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude_slice_state
        in: query
        description: "Filter by slice state; allowed values Nascent, Configuring,\
          \ StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError,\
          \ AllocatedError, AllocatedOK"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Configuring
            - StableError
            - StableOK
            - Closing
            - Dead
            - Modifying
            - ModifyOK
            - ModifyError
            - AllocatedError
            - AllocatedOK
      - name: exclude_sliver_state
        in: query
        description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
          \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Nascent
            - Ticketed
            - Active
            - ActiveTicketed
            - Closed
            - CloseWait
            - Failed
            - Unknown
            - CloseFail
      - name: page
        in: query
        description: Page number for pagination. Default is 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: per_page
        in: query
        description: Number of records per page. Default is 200.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slices'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.slices_controller
  /slices/{slice_id}:
    post:
      tags:
      - slices
      summary: Create/Update a slice
      description: Create a Slice
      operationId: slices_slice_id_post
      parameters:
      - name: slice_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
      requestBody:
        $ref: '#/components/requestBodies/payload_slice'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_200_ok_no_content'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
      security:
      - bearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.slices_controller
components:
  schemas:
    sites:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/site'
    site:
      type: object
      properties:
        name:
          type: string
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/host'
    host:
      type: object
      properties:
        name:
          type: string
    projects:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/project'
    project:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        project_type:
          type: string
          description: "Type of the project (e.g., research, education, etc.)"
          example: research
        active:
          type: boolean
          description: Indicates if the project is currently active
          example: true
        created_date:
          type: string
          description: Timestamp when the project was created
          format: date-time
        expires_on:
          type: string
          description: Timestamp when the project is set to expire
          format: date-time
        retired_date:
          type: string
          description: "Timestamp when the project was retired, if applicable"
          format: date-time
        last_updated:
          type: string
          description: Timestamp of the last update to the project record
          format: date-time
        users:
          $ref: '#/components/schemas/project_users'
    users:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/user'
    user:
      type: object
      properties:
        user_id:
          type: string
        user_email:
          type: string
        active:
          type: boolean
          description: Indicates if the user is currently active
          example: true
        user_name:
          type: string
          description: Full name of the user
          example: Jane Doe
        affiliation:
          type: string
          description: Institutional or organizational affiliation
          example: NC State University
        registered_on:
          type: string
          description: Timestamp when the user registered
          format: date-time
        last_updated:
          type: string
          description: Timestamp of the last update to the user record
          format: date-time
        google_scholar:
          type: string
          description: URL to the user's Google Scholar profile
          example: https://scholar.google.com/citations?user=XYZ123
        scopus:
          type: string
          description: URL to the user's Scopus profile
          example: https://www.scopus.com/authid/detail.uri?authorId=9876543210
        slices:
          $ref: '#/components/schemas/user_slices'
    slices:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/slice'
    slice:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        slice_id:
          type: string
        slice_name:
          type: string
        state:
          type: string
        lease_start:
          type: string
          format: date-time
        lease_end:
          type: string
          format: date-time
        slivers:
          $ref: '#/components/schemas/slice_slivers'
    slivers:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/sliver'
    sliver:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        slice_id:
          type: string
        slice_name:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        host:
          type: string
        site:
          type: string
        sliver_id:
          type: string
        node_id:
          type: string
        state:
          type: string
        sliver_type:
          type: string
        ip_subnet:
          type: string
        error:
          type: string
        image:
          type: string
        core:
          type: integer
        ram:
          type: integer
        disk:
          type: integer
        bandwidth:
          type: integer
        lease_start:
          type: string
          format: date-time
        lease_end:
          type: string
          format: date-time
        components:
          $ref: '#/components/schemas/sliver_components'
        interfaces:
          $ref: '#/components/schemas/sliver_interfaces'
    component:
      type: object
      properties:
        component_id:
          type: string
        node_id:
          type: string
        component_node_id:
          type: string
        type:
          type: string
        model:
          type: string
        bdfs:
          type: array
          items:
            type: string
    interface:
      type: object
      properties:
        interface_id:
          type: string
        site:
          type: string
        vlan:
          type: string
        bdf:
          type: string
        local_name:
          type: string
        device_name:
          type: string
        name:
          type: string
    projectMemberships:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/projectMembership'
    projectMembership:
      type: object
      properties:
        project_id:
          type: string
          format: uuid
        project_name:
          type: string
        project_type:
          type: string
        active:
          type: boolean
        created_date:
          type: string
          format: date-time
        expires_on:
          type: string
          format: date-time
        retired_date:
          type: string
          format: date-time
          nullable: true
        last_updated:
          type: string
          format: date-time
        members:
          type: array
          items:
            $ref: '#/components/schemas/projectMember'
    projectMember:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        user_name:
          type: string
        user_email:
          type: string
        affiliation:
          type: string
        membership_type:
          type: string
    userMemberships:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/userMembership'
    userMembership:
      type: object
      properties:
        user_id:
          type: string
        user_email:
          type: string
        active:
          type: boolean
          description: Indicates if the user is currently active
          example: true
        user_name:
          type: string
          description: Full name of the user
          example: Jane Doe
        affiliation:
          type: string
          description: Institutional or organizational affiliation
          example: NC State University
        registered_on:
          type: string
          description: Timestamp when the user registered
          format: date-time
        last_updated:
          type: string
          description: Timestamp of the last update to the user record
          format: date-time
        google_scholar:
          type: string
          description: URL to the user's Google Scholar profile
          example: https://scholar.google.com/citations?user=XYZ123
        scopus:
          type: string
          description: URL to the user's Scopus profile
          example: https://www.scopus.com/authid/detail.uri?authorId=9876543210
        projects:
          type: array
          description: List of project memberships for the user
          items:
            $ref: '#/components/schemas/userMembership_projects'
    status_200_ok_paginated:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        size:
          type: integer
        status:
          type: integer
          default: 200
        total:
          type: integer
        type:
          type: string
    status_400_bad_request:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_400_bad_request_errors'
    status_401_unauthorized:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_401_unauthorized_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 401
    status_403_forbidden:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_403_forbidden_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 403
    status_404_not_found:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_404_not_found_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 404
    status_500_internal_server_error:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_500_internal_server_error_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 500
    status_400_bad_request_errors:
      type: object
      properties:
        message:
          type: string
          default: Bad Request
        details:
          type: string
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 400
    status_401_unauthorized_errors:
      type: object
      properties:
        message:
          type: string
          default: Unauthorized
        details:
          type: string
    status_403_forbidden_errors:
      type: object
      properties:
        message:
          type: string
          default: Forbidden
        details:
          type: string
    status_404_not_found_errors:
      type: object
      properties:
        message:
          type: string
          default: Not Found
        details:
          type: string
    status_500_internal_server_error_errors:
      type: object
      properties:
        message:
          type: string
          default: Internal Server Error
        details:
          type: string
    status_200_ok_no_content_data:
      type: object
      properties:
        message:
          type: string
          default: No Content
        details:
          type: string
      example:
        details: details
        message: No Content
    status_200_ok_no_content:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/status_200_ok_no_content_data'
        type:
          type: string
          default: no_content
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 200
      example:
        data:
        - details: details
          message: No Content
        - details: details
          message: No Content
        size: 0
        type: no_content
        status: 6
    status_200_ok_single:
      type: object
      properties:
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 200
        type:
          type: string
    version:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_single'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/version_data'
    version_data:
      required:
      - reference
      - version
      properties:
        reference:
          type: string
          example: https://github.com/fabric-testbed/sliver-analytics
        version:
          type: string
          example: 1.0.0
    project_users:
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/user'
    user_slices:
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/slice'
    slice_slivers:
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/sliver'
    sliver_components:
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/component'
    sliver_interfaces:
      type: object
      properties:
        total:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/interface'
    userMembership_projects:
      type: object
      properties:
        project_uuid:
          type: string
          description: UUID of the project
        project_name:
          type: string
          description: Name of the project
        project_type:
          type: string
          description: Type of the project
        project_active:
          type: boolean
          description: Whether the project is active
        expires_on:
          type: string
          description: "Expiration date of the project, if any"
          format: date-time
          nullable: true
        retired_date:
          type: string
          description: "Date when the project was retired, if applicable"
          format: date-time
          nullable: true
        membership_type:
          type: string
          description: "Role of the user in the project (e.g., owner, member)"
        start_time:
          type: string
          description: Start time of the membership
          format: date-time
          nullable: true
        end_time:
          type: string
          description: End time of the membership
          format: date-time
          nullable: true
        active:
          type: boolean
          description: Whether the membership is currently active
  parameters:
    startTime:
      name: start_time
      in: query
      description: Filter by start time (inclusive)
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    endTime:
      name: end_time
      in: query
      description: Filter by end time (inclusive)
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    userId:
      name: user_id
      in: query
      description: Filter by user uuid
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    userEmail:
      name: user_email
      in: query
      description: Filter by user email
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    excludeUserId:
      name: exclude_user_id
      in: query
      description: Exclude Users by IDs
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    excludeUserEmail:
      name: exclude_user_email
      in: query
      description: Exclude Users by emails
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    projectId:
      name: project_id
      in: query
      description: Filter by list of project UUIDs to include
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    excludeProjectId:
      name: exclude_project_id
      in: query
      description: Filter by list of project UUIDs to exclude
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    sliceId:
      name: slice_id
      in: query
      description: Filter by slice uuid
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    sliverId:
      name: sliver_id
      in: query
      description: Filter by sliver uuid
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f
    componentType:
      name: component_type
      in: query
      description: "Filter by component type, allowed values GPU, SmartNIC, SharedNIC,\
        \ FPGA, NVME, Storage"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - GPU
          - SmartNIC
          - SharedNIC
          - FPGA
          - NVME
          - Storage
    componentModel:
      name: component_model
      in: query
      description: Filter by component model
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    sliverType:
      name: sliver_type
      in: query
      description: "Filter by sliver type; allowed values VM, Switch, Facility, L2STS,\
        \ L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext, FABNetv6Ext"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - VM
          - Switch
          - Facility
          - L2STS
          - L2PTP
          - L2Bridge
          - FABNetv4
          - FABNetv6
          - PortMirror
          - L3VPN
          - FABNetv4Ext
          - FABNetv6Ext
    sliverState:
      name: sliver_state
      in: query
      description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
        \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Nascent
          - Ticketed
          - Active
          - ActiveTicketed
          - Closed
          - CloseWait
          - Failed
          - Unknown
          - CloseFail
    projectType:
      name: project_type
      in: query
      description: "Filter by project type; allowed values research, education, maintenance,\
        \ tutorial"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - research
          - education
          - maintenance
          - tutorial
    excludeProjectType:
      name: exclude_project_type
      in: query
      description: "Exclude by project type; allowed values research, education, maintenance,\
        \ tutorial"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - research
          - education
          - maintenance
          - tutorial
    excludeSliverState:
      name: exclude_sliver_state
      in: query
      description: "Filter by sliver state; allowed values Nascent, Ticketed, Active,\
        \ ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Nascent
          - Ticketed
          - Active
          - ActiveTicketed
          - Closed
          - CloseWait
          - Failed
          - Unknown
          - CloseFail
    sliceState:
      name: slice_state
      in: query
      description: "Filter by slice state; allowed values Nascent, Configuring, StableError,\
        \ StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError,\
        \ AllocatedOK"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Nascent
          - Configuring
          - StableError
          - StableOK
          - Closing
          - Dead
          - Modifying
          - ModifyOK
          - ModifyError
          - AllocatedError
          - AllocatedOK
    excludeSliceState:
      name: exclude_slice_state
      in: query
      description: "Filter by slice state; allowed values Nascent, Configuring, StableError,\
        \ StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError,\
        \ AllocatedOK"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Nascent
          - Configuring
          - StableError
          - StableOK
          - Closing
          - Dead
          - Modifying
          - ModifyOK
          - ModifyError
          - AllocatedError
          - AllocatedOK
    site:
      name: site
      in: query
      description: Filter by site
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    facility:
      name: facility
      in: query
      description: Filter by facility
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    excludeSite:
      name: exclude_site
      in: query
      description: Exclude sites
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    host:
      name: host
      in: query
      description: Filter by host
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    excludeHost:
      name: exclude_host
      in: query
      description: Exclude hosts
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    ipSubnet:
      name: ip_subnet
      in: query
      description: Filter by specified IP subnet
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    bdf:
      name: bdf
      in: query
      description: Filter by specified BDF (Bus:Device.Function) of interfaces/components
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    vlan:
      name: vlan
      in: query
      description: Filter by VLAN associated with their sliver interfaces.
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    page:
      name: page
      in: query
      description: Page number for pagination. Default is 0.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 0
    perPage:
      name: per_page
      in: query
      description: Number of records per page. Default is 200.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 200
    projectActive:
      name: project_active
      in: query
      description: Filter by project active status
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    projectExpired:
      name: project_expired
      in: query
      description: Filter by project expiration (true = expired)
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    projectRetired:
      name: project_retired
      in: query
      description: Filter by project retirement (true = retired)
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    userActive:
      name: user_active
      in: query
      description: Filter by user active status
      required: false
      style: form
      explode: true
      schema:
        type: boolean
  requestBodies:
    payload_sliver:
      description: Create/Modify sliver
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/sliver'
      required: true
    payload_slice:
      description: Create new Slice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/slice'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_bearerAuth

