openapi: 3.0.0
info:
  title: "Analytics API with PostgreSQL"
  description: "API for managing users, projects, slices, slivers, and related entities."
  version: "1.0.0"
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/RENCI3/analytics/1.0.0
  - url: "http://localhost:8080/reports"
tags:
  - name: users
    description: Users in FABRIC
  - name: projects
    description: Projects in FABRIC
  - name: slices
    description: Slices in FABRIC
  - name: slivers
    description: Slivers in FABRIC slices
  - name: sites
    description: Sites in FABRIC
  - name: hosts
    description: Hosts in FABRIC
  - name: default
    description: Default information

paths:
  /version:
    get:
      tags:
      - version
      summary: Version
      description: Version
      operationId: version_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /users:
    get:
      tags:
        - users
      summary: Get users
      description: Retrieve a list of users with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/userEmail'
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/sliceId'
        - $ref: '#/components/parameters/sliceState'
        - $ref: '#/components/parameters/sliverId'
        - $ref: '#/components/parameters/sliverType'
        - $ref: '#/components/parameters/sliverState'
        - $ref: '#/components/parameters/componentType'
        - $ref: '#/components/parameters/componentModel'
        - $ref: '#/components/parameters/bdf'
        - $ref: '#/components/parameters/vlan'
        - $ref: '#/components/parameters/ipSubnet'
        - $ref: '#/components/parameters/facility'
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/host'
        - $ref: '#/components/parameters/excludeUserId'
        - $ref: '#/components/parameters/excludeUserEmail'
        - $ref: '#/components/parameters/excludeProjectId'
        - $ref: '#/components/parameters/excludeSite'
        - $ref: '#/components/parameters/excludeHost'
        - $ref: '#/components/parameters/excludeSliceState'
        - $ref: '#/components/parameters/excludeSliverState'
        - $ref: '#/components/parameters/projectType'
        - $ref: '#/components/parameters/excludeProjectType'
        - $ref: '#/components/parameters/active'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /users/{uuid}:
    get:
      tags:
        - users
      summary: Get specific user
      description: Returns a user identified by uuid.
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          description: User identified by universally unique identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /users/memberships:
    get:
      tags:
        - users
      summary: Get users
      description: Retrieve a list of users with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/userEmail'
        - $ref: '#/components/parameters/excludeUserId'
        - $ref: '#/components/parameters/excludeUserEmail'
        - $ref: '#/components/parameters/projectType'
        - $ref: '#/components/parameters/excludeProjectType'
        - $ref: '#/components/parameters/active'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /sites:
    get:
      tags:
        - sites
      summary: Get sites
      description: Retrieve a list of sites.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sites"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /hosts:
    get:
      tags:
        - hosts
      summary: Get hosts
      description: Retrieve a list of hosts.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/excludeSite'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sites"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /slivers:
    get:
      tags:
        - slivers
      summary: Get slivers
      description: Retrieve a list of slivers with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/userEmail'
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/sliceId'
        - $ref: '#/components/parameters/sliceState'
        - $ref: '#/components/parameters/sliverId'
        - $ref: '#/components/parameters/sliverType'
        - $ref: '#/components/parameters/sliverState'
        - $ref: '#/components/parameters/componentType'
        - $ref: '#/components/parameters/componentModel'
        - $ref: '#/components/parameters/bdf'
        - $ref: '#/components/parameters/vlan'
        - $ref: '#/components/parameters/ipSubnet'
        - $ref: '#/components/parameters/facility'
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/host'
        - $ref: '#/components/parameters/excludeUserId'
        - $ref: '#/components/parameters/excludeUserEmail'
        - $ref: '#/components/parameters/excludeProjectId'
        - $ref: '#/components/parameters/excludeSite'
        - $ref: '#/components/parameters/excludeHost'
        - $ref: '#/components/parameters/excludeSliceState'
        - $ref: '#/components/parameters/excludeSliverState'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/slivers"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /slivers/{slice_id}/{sliver_id}:
    post:
      tags:
        - slivers
      summary: Create/Update Sliver
      description: Create/Update Sliver.
      security:
        - bearerAuth: []
      parameters:
        - name: slice_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
        - name: sliver_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      requestBody:
        $ref: '#/components/requestBodies/payload_sliver'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status_200_ok_no_content"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /projects:
    get:
      tags:
      - projects
      summary: "Retrieve a list of projects"
      description: "Returns a paginated list of projects with their UUIDs."
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/userEmail'
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/sliceId'
        - $ref: '#/components/parameters/sliceState'
        - $ref: '#/components/parameters/sliverId'
        - $ref: '#/components/parameters/sliverType'
        - $ref: '#/components/parameters/sliverState'
        - $ref: '#/components/parameters/componentType'
        - $ref: '#/components/parameters/componentModel'
        - $ref: '#/components/parameters/bdf'
        - $ref: '#/components/parameters/vlan'
        - $ref: '#/components/parameters/ipSubnet'
        - $ref: '#/components/parameters/facility'
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/host'
        - $ref: '#/components/parameters/excludeUserId'
        - $ref: '#/components/parameters/excludeUserEmail'
        - $ref: '#/components/parameters/excludeProjectId'
        - $ref: '#/components/parameters/excludeSite'
        - $ref: '#/components/parameters/excludeHost'
        - $ref: '#/components/parameters/excludeSliceState'
        - $ref: '#/components/parameters/excludeSliverState'
        - $ref: '#/components/parameters/projectType'
        - $ref: '#/components/parameters/excludeProjectType'
        - $ref: '#/components/parameters/active'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projects"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /projects/{uuid}:
    get:
      tags:
      - projects
      summary: "Retrieve a project"
      description: "Returns a project identified by uuid."
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          description: Project identified by universally unique identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projects"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /projects/memberships:
    get:
      tags:
      - projects
      summary: "Retrieve project membership"
      description: "Returns a paginated list of projects including the users."
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/excludeProjectId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/projects"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'
  /slices:
    get:
      tags:
        - slices
      summary: Get slices
      description: Retrieve a list of slices with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/startTime'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/userEmail'
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/sliceId'
        - $ref: '#/components/parameters/sliceState'
        - $ref: '#/components/parameters/sliverId'
        - $ref: '#/components/parameters/sliverType'
        - $ref: '#/components/parameters/sliverState'
        - $ref: '#/components/parameters/componentType'
        - $ref: '#/components/parameters/componentModel'
        - $ref: '#/components/parameters/bdf'
        - $ref: '#/components/parameters/vlan'
        - $ref: '#/components/parameters/ipSubnet'
        - $ref: '#/components/parameters/facility'
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/host'
        - $ref: '#/components/parameters/excludeUserId'
        - $ref: '#/components/parameters/excludeUserEmail'
        - $ref: '#/components/parameters/excludeProjectId'
        - $ref: '#/components/parameters/excludeSite'
        - $ref: '#/components/parameters/excludeHost'
        - $ref: '#/components/parameters/excludeSliceState'
        - $ref: '#/components/parameters/excludeSliverState'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/slices"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

  /slices/{slice_id}:
    post:
      tags:
        - slices
      summary: Create/Update a slice
      description: Create a Slice
      security:
        - bearerAuth: []
      parameters:
        - name: slice_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      requestBody:
        $ref: '#/components/requestBodies/payload_slice'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status_200_ok_no_content"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_400_bad_request'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_401_unauthorized'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_403_forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_404_not_found'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_500_internal_server_error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    startTime:
      name: start_time
      in: query
      required: false
      schema:
        type: string
        format: date-time
      description: Filter by start time (inclusive)
    endTime:
      name: end_time
      required: false
      in: query
      schema:
        type: string
        format: date-time
      description: Filter by end time (inclusive)
    userId:
      name: user_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Filter by user uuid
    userEmail:
      name: user_email
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by user email
    excludeUserId:
      name: exclude_user_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Exclude Users by IDs
    excludeUserEmail:
      name: exclude_user_email
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Exclude Users by emails
    projectId:
      name: project_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Filter by project uuid

    excludeProjectId:
      name: exclude_project_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Exclude projects

    sliceId:
      name: slice_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Filter by slice uuid

    sliverId:
      name: sliver_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: "a3f41e9a-7e2b-4df7-baf7-12f48a3c8e6f"
      description: Filter by sliver uuid

    componentType:
      name: component_type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [GPU, SmartNIC, SharedNIC, FPGA, NVME, Storage]
      description: Filter by component type, allowed values GPU, SmartNIC, SharedNIC, FPGA, NVME, Storage

    componentModel:
      name: component_model
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by component model

    sliverType:
      name: sliver_type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [VM, Switch, Facility, L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext, FABNetv6Ext]
      description: Filter by sliver type; allowed values VM, Switch, Facility, L2STS, L2PTP, L2Bridge, FABNetv4, FABNetv6, PortMirror, L3VPN, FABNetv4Ext, FABNetv6Ext

    sliverState:
      name: sliver_state
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [Nascent, Ticketed, Active, ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail]
      description: Filter by sliver state; allowed values Nascent, Ticketed, Active, ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail

    projectType:
      name: project_type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [research, education, maintenance, tutorial]
      description: Filter by project type; allowed values research, education, maintenance, tutorial

    excludeProjectType:
      name: exclude_project_type
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [research, education, maintenance, tutorial]
      description: Exclude by project type; allowed values research, education, maintenance, tutorial

    active:
      name: active
      in: query
      required: false
      schema:
        type: boolean
        description: Filter by active state of user or project

    excludeSliverState:
      name: exclude_sliver_state
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [Nascent, Ticketed, Active, ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail]
      description: Filter by sliver state; allowed values Nascent, Ticketed, Active, ActiveTicketed, Closed, CloseWait, Failed, Unknown, CloseFail

    sliceState:
      name: slice_state
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [Nascent, Configuring, StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError, AllocatedOK]
      description: Filter by slice state; allowed values Nascent, Configuring, StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError, AllocatedOK

    excludeSliceState:
      name: exclude_slice_state
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [Nascent, Configuring, StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError, AllocatedOK]
      description: Filter by slice state; allowed values Nascent, Configuring, StableError, StableOK, Closing, Dead, Modifying, ModifyOK, ModifyError, AllocatedError, AllocatedOK

    site:
      name: site
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by site

    facility:
      name: facility
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by facility

    excludeSite:
      name: exclude_site
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Exclude sites

    host:
      name: host
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by host

    excludeHost:
      name: exclude_host
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Exclude hosts

    ipSubnet:
      name: ip_subnet
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by specified IP subnet

    bdf:
      name: bdf
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by specified BDF (Bus:Device.Function) of interfaces/components

    vlan:
      name: vlan
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: Filter by VLAN associated with their sliver interfaces.

    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: "Page number for pagination. Default is 0."

    perPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 200
      description: "Number of records per page. Default is 200."

  schemas:
    sites:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/site'

    site:
      type: object
      properties:
        name:
          type: string
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/host'

    host:
      type: object
      properties:
        name:
          type: string
    projects:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/project'

    project:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        project_type:
          type: string
          example: research
          description: Type of the project (e.g., research, education, etc.)
        active:
          type: boolean
          example: true
          description: Indicates if the project is currently active
        created_date:
          type: string
          format: date-time
          description: Timestamp when the project was created
        expires_on:
          type: string
          format: date-time
          description: Timestamp when the project is set to expire
        retired_date:
          type: string
          format: date-time
          description: Timestamp when the project was retired, if applicable
        last_updated:
          type: string
          format: date-time
          description: Timestamp of the last update to the project record
        users:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/user'

    users:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/user'
    user:
      type: object
      properties:
        user_id:
          type: string
        user_email:
          type: string
        active:
          type: boolean
          example: true
          description: Indicates if the user is currently active
        user_name:
          type: string
          example: "Jane Doe"
          description: Full name of the user
        affiliation:
          type: string
          example: "NC State University"
          description: Institutional or organizational affiliation
        registered_on:
          type: string
          format: date-time
          description: Timestamp when the user registered
        last_updated:
          type: string
          format: date-time
          description: Timestamp of the last update to the user record
        google_scholar:
          type: string
          example: "https://scholar.google.com/citations?user=XYZ123"
          description: URL to the user's Google Scholar profile
        scopus:
          type: string
          example: "https://www.scopus.com/authid/detail.uri?authorId=9876543210"
          description: URL to the user's Scopus profile
        projects:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/project'
        slices:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/slice'
    slices:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/slice'
    slice:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        slice_id:
          type: string
        slice_name:
          type: string
        state:
          type: string
        lease_start:
          type: string
          format: date-time
        lease_end:
          type: string
          format: date-time
        slivers:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/sliver'
    slivers:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_paginated'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/sliver'
    sliver:
      type: object
      properties:
        project_id:
          type: string
        project_name:
          type: string
        slice_id:
          type: string
        slice_name:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        host:
          type: string
        site:
          type: string
        sliver_id:
          type: string
        node_id:
          type: string
        state:
          type: string
        sliver_type:
          type: string
        ip_subnet:
          type: string
        error:
          type: string
        image:
          type: string
        core:
          type: integer
        ram:
          type: integer
        disk:
          type: integer
        bandwidth:
          type: integer
        lease_start:
          type: string
          format: date-time
        lease_end:
          type: string
          format: date-time
        components:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/component'
        interfaces:
          type: object
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                $ref: '#/components/schemas/interface'
    component:
      type: object
      properties:
        component_id:
          type: string
        node_id:
          type: string
        component_node_id:
          type: string
        type:
          type: string
        model:
          type: string
        bdfs:
          type: array
          items:
            type: string
    interface:
      type: object
      properties:
        interface_id:
          type: string
        site:
          type: string
        vlan:
          type: string
        bdf:
          type: string
        local_name:
          type: string
        device_name:
          type: string
        name:
          type: string

    status_200_ok_paginated:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        size:
          type: integer
        status:
          type: integer
          default: 200
        total:
          type: integer
        type:
          type: string
    status_400_bad_request:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_400_bad_request_errors'
    status_401_unauthorized:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_401_unauthorized_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 401
    status_403_forbidden:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_403_forbidden_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 403
    status_404_not_found:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_404_not_found_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 404
    status_500_internal_server_error:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/status_500_internal_server_error_errors'
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 500
    status_400_bad_request_errors:
      type: object
      properties:
        message:
          type: string
          default: Bad Request
        details:
          type: string
        type:
          type: string
          default: error
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 400
    status_401_unauthorized_errors:
      type: object
      properties:
        message:
          type: string
          default: Unauthorized
        details:
          type: string
    status_403_forbidden_errors:
      type: object
      properties:
        message:
          type: string
          default: Forbidden
        details:
          type: string
    status_404_not_found_errors:
      type: object
      properties:
        message:
          type: string
          default: Not Found
        details:
          type: string
    status_500_internal_server_error_errors:
      type: object
      properties:
        message:
          type: string
          default: Internal Server Error
        details:
          type: string
    status_200_ok_no_content_data:
      type: object
      properties:
        message:
          type: string
          default: No Content
        details:
          type: string
      example:
        details: details
        message: No Content
    status_200_ok_no_content:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/status_200_ok_no_content_data'
        type:
          type: string
          default: no_content
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 200
    status_200_ok_single:
      type: object
      properties:
        size:
          type: integer
          default: 1
        status:
          type: integer
          default: 200
        type:
          type: string
    version:
      type: object
      allOf:
      - $ref: '#/components/schemas/status_200_ok_single'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/version_data'
    version_data:
      required:
      - reference
      - version
      properties:
        reference:
          type: string
          example: https://github.com/fabric-testbed/sliver-analytics
        version:
          type: string
          example: 1.0.0
      example: null
  requestBodies:
    payload_sliver:
      description: Create/Modify sliver
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/sliver'
      required: true
    payload_slice:
      description: Create new Slice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/slice'